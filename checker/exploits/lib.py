from urllib.parse import urlencode
from io import BytesIO
import string, random, pycurl, os, time, re, hashlib

class OfflineException(Exception): pass

def _get_request(url, params=None, useCookies=False, follow=True, cookief="test", cookies="", verbose=True, *args):
    buffer = BytesIO()
    c = pycurl.Curl()
    c.setopt(c.WRITEDATA, buffer)
    c.setopt(c.VERBOSE, verbose)
    c.setopt(c.FOLLOWLOCATION, follow)
    c.setopt(c.URL, url)
    c.setopt(pycurl.TIMEOUT, 5)
    c.setopt(pycurl.HEADER, True)
    c.setopt(pycurl.SSL_VERIFYPEER, 0)
    c.setopt(pycurl.SSL_VERIFYHOST, 0)
    if len(cookies) > 0:
        c.setopt(pycurl.COOKIE, cookies)

    if useCookies:
        cookie_file = hashlib.md5(cookief.encode()).hexdigest() + ".cookie"
        if not os.path.exists(cookie_file):
            (open(cookie_file, 'w')).close()

        with open(cookie_file, 'w') as cookie_f:
            cookie_f.write(cookie_value)
            c.setopt(pycurl.COOKIEFILE, cookie_file)
            c.setopt(pycurl.COOKIEJAR, cookie_file)

    try:
        c.perform()
        c.close()
    except pycurl.error:
        raise OfflineException("Service not reachable")

    return buffer.getvalue().decode('utf-8')